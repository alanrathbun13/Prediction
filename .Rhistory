##Combine using random forests
combineddf <- data.frame(pRF, pGBM, pLDA, diagnosis=testing$diagnosis)
combinedRF <- train(diagnosis ~ ., method="rf", data=combineddf)
combinedPred <- predict(combinedRF, testing)
confusionMatrix(testing$diagnosis, combinedPred)
set.seed(233)
library(AppliedPredictiveModeling)
data(concrete)
inTrain = createDataPartition(concrete$CompressiveStrength, p = 3/4)[[1]]
training = concrete[ inTrain,]
testing = concrete[-inTrain,]
?plot.enet
fit <- train(CompressiveStrength ~ ., training, method="lasso")
plot.enet(fit$finalModel, xvar="penalty", use.color=TRUE)
?plot.enet
library(downloader)
link <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
if(!file.exists("training.csv")) {download(link, dest="training.csv")}
training <- read.csv(file = "training.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""," "))
link <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
if(!file.exists("testing.csv")) {download(link, dest="testing.csv")}
testing <- read.csv(file = "testing.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""," "))
columns <- which(colSums(is.na(training))==0, arr.ind=TRUE)
training <- training[, columns]
testing <- testing[, columns]
library(stats)
tmatrix <- dist(data.matrix(training[, 7:59]))
heatmap(tmatrix)
summary(training[, 7:59]))
summary(training[, 7:59])
class(training$magnet_arm_x)
training <- training[, 7:60]
testing <- testing[, 7:60]
View(testing)
library(downloader)
link <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
if(!file.exists("training.csv")) {download(link, dest="training.csv")}
training <- read.csv(file = "training.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""," "))
link <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
if(!file.exists("testing.csv")) {download(link, dest="testing.csv")}
testing <- read.csv(file = "testing.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""," "))
?apply
View(training)
columns <- which(colSums(is.na(training))==0, arr.ind=TRUE)
training <- training[, columns]
training <- training[, 8:60]
testing <- testing[, columns]
testing <- testing[, 8:60]
View(testing)
summary(testing)
str(testing)
library(downloader)
link <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
if(!file.exists("training.csv")) {download(link, dest="training.csv")}
training <- read.csv(file = "training.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""," "))
link <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
if(!file.exists("testing.csv")) {download(link, dest="testing.csv")}
testing <- read.csv(file = "testing.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""," "))
testing$classe
View(testing)
library(downloader)
link <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
if(!file.exists("training.csv")) {download(link, dest="training.csv")}
training <- read.csv(file = "training.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""))
link <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
if(!file.exists("testing.csv")) {download(link, dest="testing.csv")}
testing <- read.csv(file = "testing.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""))
training$classe
columns <- which(colSums(is.na(training))==0, arr.ind=TRUE)
training <- training[, columns]
training$classe
str(training)
testing <- testing[, columns]
View(testing)
training <- training[, 8:60]
testing <- testing[, 8:60]
?transform
tmatrix <- lapply(training, as.numeric)
tmatrix
for(i in ncol(training[,1:59]))
{training[,i] <- as.numeric(training[,i])
}
for(i in ncol(training))
{training[,i] <- as.numeric(training[,i])
}
View(training)
summary(training)
link <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
if(!file.exists("training.csv")) {download(link, dest="training.csv")}
training <- read.csv(file = "training.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""))
link <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
if(!file.exists("testing.csv")) {download(link, dest="testing.csv")}
testing <- read.csv(file = "testing.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""))
```{r, echo=FALSE}
columns <- which(colSums(is.na(training))==0, arr.ind=TRUE)
training <- training[, columns]
training <- training[, 8:60]
testing <- testing[, columns]
testing <- testing[, 8:60]
View(testing)
for(i in 1:59)
{training[,i] <- as.numeric(training[,i])}
1:59
for(i in 1:59)
{
training[, i] <- as.numeric(training[, i])
}
for(i in 1:59)
{training[,i] <- as.numeric(training[, i])}
training[,1]
for(i in ncol(training))
{training[,i] <- as.numeric(training[, i])}
for(i in ncol(training))
{training[,i] <- as.numeric(training[, i])}
training <- read.csv(file = "training.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""))
testing <- read.csv(file = "testing.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""))
columns <- which(colSums(is.na(training))==0, arr.ind=TRUE)
training <- training[, columns]
training <- training[, 8:60]
testing <- testing[, columns]
testing <- testing[, 8:60]
for(i in ncol(training))
{training[,i] <- as.numeric(training[, i])}
link <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
if(!file.exists("training.csv")) {download(link, dest="training.csv")}
training <- read.csv(file = "training.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""))
link <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
if(!file.exists("testing.csv")) {download(link, dest="testing.csv")}
testing <- read.csv(file = "testing.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""))
columns <- which(colSums(is.na(training))==0, arr.ind=TRUE)
training <- training[, columns]
training <- training[, 8:60]
testing <- testing[, columns]
testing <- testing[, 8:60]
library(stats)
for(i in 1:52)
{training[,i] <- as.numeric(training[, i])}
tmatrix <- dist(data.matrix(training[, 1:52]))
heatmap(tmatrix)
heatmap(tmatrix)
tmatrix <- data.matrix(training[, 1:52]))
tmatrix <- data.matrix(training[, 1:52])
heatmap(tmatrix)
library(stats)
?prcomp
library(caret)
?preProcess
prcomp <- preProcess(training[,-53], method="pca", thresh = 0.8)
prcomp$ranges
trainPC <- preProcess(training[,-53], method="pca", thresh = 0.8)
trainPC
trainPC <- preProcess(training[,-53], method="pca", thresh = 0.90)
trainPC
trainPC <- preProcess(training[,-53], method="pca", thresh = 0.95)
trainPC
trainPC <- preProcess(training[,-53], method="pca", thresh = 0.75)
trainPC
log(10)
log10(10)
?log
trainPC <- preProcess(log(training[,-53]+1), method="pca", thresh = 0.75))
trainPC <- preProcess(log(training[,-53]+1), method="pca", thresh = 0.75)
trainPC <- preProcess(log(training[,-53]+1)), method="pca", thresh = 0.75)
log.train <- log(training[, -53])
View(log.train)
log.train <- log10(training[, -53])
View(training)
View(log.train)
View(log.train)
log.train <- log(training[, -53])
View(log.train)
remove(log.train)
View(testing)
trainPC <- preProcess(training[,-53], method="pca", thresh = 0.75)
trainPC
trainPC <- preProcess(training[,-53], method="pca", thresh = 0.80)
trainPC
trainPC <- preProcess(training[,-53], method="pca", thresh = 0.85)
trainPC
trainPC <- preProcess(training[,-53], method="pca", thresh = 0.90)
trainPC
trainPC <- preProcess(training[,-53], method="pca", thresh = 0.75)
trainPC$rotation
trainPC <- preProcess(training[,-53], method="pca", thresh = 0.8)
preProc <- preProcess(training[,-53], method="pca", thresh = 0.8)
trainPC <- predict(preProc, training[-53])
summary(preProc)
View(trainPC)
class(training$classe)
training$classe <- as.factor(training$classe)
class(training$classe)
table(training$classe)
modfit <- train(traing$classe ~ ., method="glm", data=trainPC)
modfit <- train(training$classe ~ ., method="glm", data=trainPC)
modfit <- train(training$classe ~ ., method="rpart", data=trainPC)
training <- predict(preProc, training[-53])
training <- read.csv(file = "training.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""))
columns <- which(colSums(is.na(training))==0, arr.ind=TRUE)
training <- training[, columns]
training <- training[, 8:60]
training$classe <- as.factor(training$classe)
```{r, echo=FALSE}
library(downloader)
link <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
if(!file.exists("training.csv")) {download(link, dest="training.csv")}
training <- read.csv(file = "training.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""))
columns <- which(colSums(is.na(training))==0, arr.ind=TRUE)
training <- training[, columns]
training <- training[, 8:60]
training$classe <- as.factor(training$classe)
library(caret)
preProc <- preProcess(training[,-53], method="pca", thresh = 0.8)
str(preProc)
library(caret)
preProc <- preProcess(training[,-53], method="pca", thresh = 0.8)
trainPC <- predict(preProc, training[-53])
training <- data.frame(trainPC, training$classe)
View(training)
modfit <- train(classe ~ ., method="rpart", data=training)
View(training)
training <- data.frame(trainPC, classe=training$classe)
modfit <- train(training.classe ~ ., method="rpart", data=training)
print(modfit)
?trainControl
train_control <- trainControl(method="cv", number=10)
modfit <- train(training.classe ~ .,trControl=train_control, method="rpart", data=training)
print(modfit)
training <- read.csv(file = "training.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""))
columns <- which(colSums(is.na(training))==0, arr.ind=TRUE)
training <- training[, columns]
training <- training[, 8:60]
training$classe <- as.factor(training$classe)
library(caret)
preProc <- preProcess(training[,-53], method="pca", thresh = 0.9)
trainPC <- predict(preProc, training[-53])
training <- data.frame(trainPC, classe=training$classe)
View(training)
train_control <- trainControl(method="cv", number=10)
modfit <- train(training.classe ~ .,trControl=train_control, method="rpart", data=training)
library(caret)
preProc <- preProcess(training[,-53], method="pca", thresh = 0.9)
trainPC <- predict(preProc, training[-53])
training <- data.frame(trainPC, classe=training$classe)
train_control <- trainControl(method="cv", number=10)
modfit <- train(training.classe ~ .,trControl=train_control, method="rpart", data=training)
training <- read.csv(file = "training.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""))
columns <- which(colSums(is.na(training))==0, arr.ind=TRUE)
training <- training[, columns]
training <- training[, 8:60]
training$classe <- as.factor(training$classe)
library(caret)
preProc <- preProcess(training[,-53], method="pca", thresh = 0.9)
trainPC <- predict(preProc, training[-53])
training <- data.frame(trainPC, classe=training$classe)
train_control <- trainControl(method="cv", number=10)
modfit <- train(training.classe ~ .,trControl=train_control, method="rpart", data=training)
View(training)
modfit <- train(classe ~ .,trControl=train_control, method="rpart", data=training)
print(modfit)
confusionMatrix(training$classe, predict(modfit, training))
confusionMatrix(training$classe, predict(modfit$finalModel, training))
modfit <- train(classe ~ ., method="gbm", data=training)
training <- read.csv(file = "training.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""))
columns <- which(colSums(is.na(training))==0, arr.ind=TRUE)
training <- training[, columns]
training <- training[, 8:60]
training$classe <- as.factor(training$classe)
View(training)
modfit <- train(classe ~ ., method="rtree", data=training)
library(caret)
modfit <- train(classe ~ ., method="rtree", data=training)
?train
modfit <- train(classe ~ ., method="treebag", data=training)
1
1
modfit <- train(classe ~ ., method="treebag", data=training)
modfit <- train(classe ~ ., method="rpart", data=training)
library(downloader)
link <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
if(!file.exists("training.csv")) {download(link, dest="training.csv")}
training <- read.csv(file = "training.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""))
columns <- which(colSums(is.na(training))==0, arr.ind=TRUE)
training <- training[, columns]
training <- training[, 8:60]
training$classe <- as.factor(training$classe)
library(caret)
modfit <- train(classe ~ ., method="rpart", data=training)
print(modfit)
varImp(modfit)
varImpPlot(modfit)
library(randomForest)
varImpPlot(modfit)
library(downloader)
link <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
if(!file.exists("training.csv")) {download(link, dest="training.csv")}
training <- read.csv(file = "training.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""))
library(downloader)
link <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
if(!file.exists("training.csv")) {download(link, dest="training.csv")}
training <- read.csv(file = "training.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""))
columns <- which(colSums(is.na(training))==0, arr.ind=TRUE)
library(downloader)
link <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
if(!file.exists("training.csv")) {download(link, dest="training.csv")}
training <- read.csv(file = "training.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""))
columns <- which(colSums(is.na(training))==0, arr.ind=TRUE)
training <- training[, columns]
training <- training[, 8:60]
training$classe <- as.factor(training$classe)
library(caret)
modfit <- train(classe ~ ., method="rpart", data=training)
varImp(modfit)
variables <- c("pitch_forearm", "roll_forearm", "roll_belt", "magnet_dumbbell_y", "accel_belt_z", "magnet_belt_y", "yaw_belt", "magnet_dumbbell_z", "total_accel_belt", "magnet_arm_x", "accel_arm_x", "roll_dumbbell", "accel_dumbbell_y", "roll_arm", "classe")
training <- training[, variables]
varImp(modfit)
?train
names(getModelInfo())
modfit <- train(classe ~ ., method="treebag", data=training)
print(modfit)
modfit <- train(classe ~ ., method="rpart", data=training)
print(modfit)
?expand.grid
?train
modfit <- train(classe ~ ., method="multinom", data=training)
modfit <- train(classe ~ ., method="ada", data=training)
modfit <- train(classe ~ ., method="blackboost", data=training)
modfit <- train(classe ~ ., method="rf", data=training)
print(modfit)
fit <- train(classe ~ ., method="treebag", data=training)
print(fit)
train_control <- trainControl(method="cv", number=10)
fit <- train(classe ~ ., method="treebag", trControl=train_control, data=training)
print(fit)
library(downloader)
link <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
if(!file.exists("training.csv")) {download(link, dest="training.csv")}
training <- read.csv(file = "training.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""))
columns <- which(colSums(is.na(training))==0, arr.ind=TRUE)
training <- training[, columns]
training <- training[, 8:60]
training$classe <- as.factor(training$classe)
install.packages("party")
library(caret)
modfit <- train(classe ~ ., method="rpart", data=training)
plot.rpart(modfit)
library(rpart)
plot.rpart(modfit)
library(rpart)
library(rpart.plot)
plot.rpart(modfit)
library(party)
install.packages("partykit")
install.packages("rpart")
install.packages("rpart")
install.packages("rpart")
install.packages("rpart")
install.packages("rpart")
print(modfit)
library(caret); library(party); library(rpart)
plot.rpart(modfit)
text.rpart(modfit)
library(downloader)
link <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
if(!file.exists("training.csv")) {download(link, dest="training.csv")}
training <- read.csv(file = "training.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""))
columns <- which(colSums(is.na(training))==0, arr.ind=TRUE)
training <- training[, columns]
training <- training[, 8:60]
training$classe <- as.factor(training$classe)
library(caret); library(rpart); library(party)
modfit <- train(classe ~ ., method="rpart", data=training)
print(modfit)
library(downloader)
link <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
if(!file.exists("training.csv")) {download(link, dest="training.csv")}
training <- read.csv(file = "training.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""))
columns <- which(colSums(is.na(training))==0, arr.ind=TRUE)
training <- training[, columns]
training <- training[, 8:60]
training$classe <- as.factor(training$classe)
library(caret); library(rpart); library(party)
modfit <- train(classe ~ ., method="rpart", data=training)
print(modfit)
varImp(modfit)
library(rpart.plot)
library(rattle)
library(partykit)
plot(modfit)
text(modfit)
as.party(modfit)
plot(modfit$finalModel)
shit <- as.party(modfit$finalModel)
plot(shit)
varImp(modfit)
screening <- as.party(modfit$finalModel)
plot(screening)
variables <- c("pitch_forearm", "roll_forearm", "roll_belt", "magnet_dumbbell_y", "accel_belt_z", "magnet_belt_y", "yaw_belt", "magnet_dumbbell_z", "total_accel_belt", "magnet_arm_x", "accel_arm_x", "roll_dumbbell", "accel_dumbbell_y", "roll_arm", "classe")
training <- training[, variables]
train_control <- trainControl(method="cv", number=10)
fit <- train(classe ~ ., method="treebag", trControl=train_control, data=training)
print(fit)
print(fit)
plot(fit)
confusionMatrix(training$classe, prediction(fit, training))
confusionMatrix(training$classe, predict(fit, training))
link <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
if(!file.exists("testing.csv")) {download(link, dest="testing.csv")}
testing <- read.csv(file = "testing.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""))
View(testing)
getwd()
dir.exists("prediction")
dir()
library(downloader); library(caret); library(party); library(partykit)
if(!dir.exists("Prediction")) {dir.create("Prediction")}
setwd("Prediction")
link <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
if(!file.exists("training.csv")) {download(link, dest="training.csv")}
training <- read.csv(file = "training.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""))
setwd("Prediction")
columns <- which(colSums(is.na(training))==0, arr.ind=TRUE)
training <- training[, columns]
training <- training[, 8:60]
training$classe <- as.factor(training$classe)
setwd("Prediction")
link <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
if(!file.exists("df.csv")) {download(link, dest="df.csv")}
df <- read.csv(file = "df.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""))
getwd()
setwd("Prediction")
columns <- which(colSums(is.na(training))==0, arr.ind=TRUE)
training <- training[, columns]
training <- training[, 8:60]
setwd("Prediction")
columns <- which(colSums(is.na(df))==0, arr.ind=TRUE)
df <- df[, columns]
df <- df[, 8:60]
df$classe <- as.factor(df$classe)
setwd("Prediction")
modfit <- train(classe ~ ., method="rpart", data=training)
varImp(modfit)
setwd("Prediction")
screening <- as.party(modfit$finalModel)
plot(screening)
setwd("Prediction")
variables <- c("pitch_forearm", "roll_forearm", "roll_belt", "magnet_dumbbell_y", "accel_belt_z", "magnet_belt_y", "yaw_belt", "magnet_dumbbell_z", "total_accel_belt", "magnet_arm_x", "accel_arm_x", "roll_dumbbell", "accel_dumbbell_y", "roll_arm", "classe")
training <- training[, variables]
train_control <- trainControl(method="cv", number=10)
fit <- train(classe ~ ., method="treebag", trControl=train_control, data=training)
setwd("Prediction")
variables <- c("pitch_forearm", "roll_forearm", "roll_belt", "magnet_dumbbell_y", "accel_belt_z", "magnet_belt_y", "yaw_belt", "magnet_dumbbell_z", "total_accel_belt", "magnet_arm_x", "accel_arm_x", "roll_dumbbell", "accel_dumbbell_y", "roll_arm", "classe")
df <- df[, variables]
train_control <- trainControl(method="cv", number=10)
fit <- train(classe ~ ., method="treebag", trControl=train_control, data=df)
print(fit)
setwd("Prediction")
confusionMatrix(training$classe, predict(fit, df))
if(!dir.exists("Prediction")) {dir.create("Prediction")}
setwd("Prediction")
link <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
if(!file.exists("df.csv")) {download(link, dest="df.csv")}
df <- read.csv(file = "df.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""))
df <- read.csv(file = "df.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""))
if(!dir.exists("Prediction")) {dir.create("Prediction")}
setwd("Prediction")
link <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
if(!file.exists("df.csv")) {download(link, dest="df.csv")}
df <- read.csv(file = "df.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""))
getwd()
if(!dir.exists("Prediction")) {dir.create("Prediction")}
setwd("Prediction")
link <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
if(!file.exists("df.csv")) {download(link, dest="df.csv")}
getwd()
library(downloader); library(caret); library(party); library(partykit)
if(!dir.exists("Prediction")) {dir.create("Prediction")}
setwd("Prediction")
link <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
if(!file.exists("df.csv")) {download(link, dest="df.csv")}
df <- read.csv(file = "df.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""))
getwd()
dim(df)
df <- read.csv(file = "df.csv", header = TRUE, sep = ",", fill = TRUE, stringsAsFactors = FALSE, na.strings = c("NA",""))
setwd("Prediction")
setwd()
getwd
getwd()
setwd("Prediction")
getwd()
setwd("Prediction")
setwd("/Prediction")
dir()
setwd("Prediction")
setwd("Prediction/")
setwd("/Prediction/")
getwd()
setwd("C:/Users/Alan/Documents/Prediction/")
getwd()
setwd("C:/Users/Alan/Documents/Prediction/")
getwd()
setwd("C:/Users/Alan/Documents/Prediction")
getwd()
if(!dir.exists("Prediction")) {dir.create("Prediction")}
setwd("Prediction")
getwd()
getwd()
setwd("Prediction")
setwd("Prediction")
link <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
if(!file.exists("df.csv")) {download(link, dest="df.csv")}
?setwd
setwd("/Prediction")
setwd("Prediction")
